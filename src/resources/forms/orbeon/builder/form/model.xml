<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xforms:model xmlns:xhtml="http://www.w3.org/1999/xhtml"
      xmlns:xforms="http://www.w3.org/2002/xforms"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
      xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
      xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
      xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
      xmlns:saxon="http://saxon.sf.net/"
      xmlns:xbl="http://www.w3.org/ns/xbl"
      xmlns:xpl="java:org.orbeon.oxf.pipeline.api.FunctionLibrary"
      xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilderFunctions"
      xmlns:toolboxOps="java:org.orbeon.oxf.fb.ToolboxOps"

      xxforms:external-events="show-fb-test-dialog"
      xxforms:noscript-support="false"
      xxforms:xhtml-layout="span"
      xxforms:xpath-analysis="false"

      id="fr-form-model">

    <!-- Variable pointing to the current language -->
    <xforms:var name="fb-lang" value="instance('fb-language-instance')"/>
    <xforms:var name="form-resources" model="fr-resources-model" value="$fr-form-resources" as="element(resource)?"/>

    <xforms:var name="is-pe" value="xpl:isPE()" as="xs:boolean"/>

    <!-- Other variables -->
    <!-- TODO: don't duplicate logic with what's in FormBuilderFunctions -->
    <xforms:var name="model" value="xhtml:head/xforms:model[@id = 'fr-form-model']"/>
    <xforms:var name="metadata-instance" value="$model/xforms:instance[@id = 'fr-form-metadata']/*"/>
    <xforms:var name="resources" value="$model/xforms:instance[@id = 'fr-form-resources']/*"/>
    <xforms:var name="current-resources" value="($resources/resource[@xml:lang = $fb-lang])[1]"/>
    <xforms:var name="body" value="xhtml:body//xforms:group[tokenize(@class, '\s+') = 'fb-body']"/>

    <xforms:var name="component-bindings" value="instance('fb-components-instance')//xbl:binding" as="element(xbl:binding)*"/>
    <xforms:var name="is-custom-instance" value="$metadata-instance/form-instance-mode = 'custom'" as="xs:boolean"/>

    <!-- TODO: Probably remove once all usages are gone -->
    <xforms:var name="current-td" value="$body//*:grid//*:td[@id = instance('fb-variables')/selected-cell]" as="element()?"/>

    <!-- Main instance -->
    <xforms:instance id="fb-form-instance"><dummy/></xforms:instance>
    <xforms:instance id="fr-form-instance" src="oxf:/forms/orbeon/builder/form/template.xml"/>

    <!-- Annotate form data passed and store it into fb-form-instance -->
    <xforms:action ev:event="fr-annotate-data">
        <!-- First store into a temporary document so that multiple inserts won't cause repeat processing until we are done -->
        <xxforms:var name="temp" value="xxforms:create-document()"/>
        <xforms:insert context="$temp"
                       origin="xxforms:call-xpl('oxf:/forms/orbeon/builder/form/annotate.xpl',
                                                ('data', 'bindings'),
                                                (event('data'), instance('fb-components-instance')),
                                                'data')"/>

        <xforms:action type="xpath" xmlns:gridOps="java:org.orbeon.oxf.fb.GridOps">
            gridOps:initializeGrids($temp)
        </xforms:action>

        <!--<xforms:message level="xxforms:log-info" value="saxon:serialize($temp, 'xml')"/>-->

        <xforms:insert ref="instance('fb-form-instance')" origin="$temp"/>
    </xforms:action>

    <!-- Mode != "new": annotate loaded data and copy it to fb-form-instance -->
    <xforms:action ev:event="fr-data-ready" if="not(xxforms:instance('fr-parameters-instance')/mode = 'new')">

        <!-- Load toolbox if mode is not new. This also annotates the form when loading is done via fr-annotate-data. -->
        <xforms:send submission="fb-load-toolbox">
            <xxforms:context
                name="app"
                value="instance('fr-form-instance')/
                           xhtml:head/
                               xforms:model[@id = 'fr-form-model']/
                                   xforms:instance[@id = 'fr-form-metadata']/
                                       */
                                           application-name"/>
        </xforms:send>

        <!-- RRR so that all binds are up to date for the rest of the initialization -->
        <xforms:rebuild/>
        <xforms:recalculate/>
        <xforms:revalidate/>

    </xforms:action>

    <!-- Mode = "new": just annotate template -->
    <xforms:action ev:event="fr-data-ready" if="xxforms:instance('fr-parameters-instance')/mode = 'new'">

        <!-- Point to template -->
        <xforms:var name="template" value="instance('fr-form-instance')"/>

        <!-- Set language in all @xml:lang on template -->
        <xforms:setvalue
            iterate="$template//@xml:lang"
            ref="."
            value="xxforms:instance('fr-language-instance')"/>

        <!-- Set initial form and first section titles on template -->
        <xforms:setvalue
            ref="fbf:metadataInstanceRoot($template)/title"
            value="$form-resources/template/untitled-form"/>
        <xforms:setvalue
            ref="fbf:resourcesInstanceRoot($template)/resource/section-1/label"
            value="$form-resources/template/untitled-section"/>

        <!-- Annotate data -->
        <xforms:dispatch targetid="fr-form-model" name="fr-annotate-data">
            <xxforms:context name="data" value="$template"/>
        </xforms:dispatch>

        <!-- RRR so that all binds are up to date for the rest of the initialization -->
        <xforms:rebuild/>
        <xforms:recalculate/>
        <xforms:revalidate/>
    </xforms:action>

    <!-- Run the rest of the initialization. Do this in separate action so that model variables are up to date. -->
    <xforms:action ev:event="fr-data-ready">

        <!-- Set current language: use language based on first resources available in loaded form -->
        <xforms:setvalue
            ref="$fb-lang"
            value="$resources/resource[1]/@xml:lang"/>

        <!-- Check permissions if there are roles -->
        <xforms:var name="has-roles" value="not(xxforms:instance('fr-roles-instance')/has-roles = 'false')" as="xs:boolean"/>
        <xforms:action if="$has-roles">
            <xforms:action if="xxforms:instance('fr-parameters-instance')/mode = 'new'">
                <!-- New form: set default value for app and form if needed -->
                <!-- NOTE: we use xxforms:bind() instead of @bind because @bind doesn't seem to work properly (incorrect context?) -->
                <xforms:action context="xxforms:instance('fr-permissions')/app[1]" if="not(@name = '*')">
                    <xforms:setvalue ref="xxforms:bind('application-name-bind')" value="context()/@name"/>
                    <!-- XXXXXXX -->
                    <xforms:setvalue ref="instance('fb-metadata-instance')/application-name" value="context()/@name"/>
                </xforms:action>
            </xforms:action>
            <xforms:action if="not(xxforms:instance('fr-parameters-instance')/mode = 'new')">
                <!-- E.g. we are reading an existing doc: IF there are roles and roles don't match THEN send redirection -->
                <xforms:var name="app" value="xxforms:bind('application-name-bind')" as="xs:string"/>
                <xforms:var name="form" value="xxforms:bind('form-name-bind')" as="xs:string"/>
                <!-- See similar logic in FR -->
                <xforms:load if="not(exists(xxforms:instance('fr-permissions')/app[@name = '*'])
                                    or exists(xxforms:instance('fr-permissions')/app[@name = $app]/form[@name = ('*', $form)]))"
                             resource="/fr/unauthorized"/>
            </xforms:action>
        </xforms:action>

        <!-- Handle user agent -->
        <xforms:setvalue ref="instance('fb-user-agent-instance')/minimal-ie-version" value="fbf:minimalIEVersion()"/>
        <xforms:setvalue ref="instance('fb-user-agent-instance')/is-supported-browser" value="fbf:isBrowserSupported()"/>

        <xforms:rebuild/>
        <xforms:recalculate/>
        <xforms:revalidate/>

    </xforms:action>

    <!-- De-annotate data before saving -->
    <xforms:action ev:event="fr-data-save-prepare">
        <xforms:insert ref="instance('fr-form-instance')"
                       origin="xxforms:call-xpl('oxf:/forms/orbeon/builder/form/deannotate.xpl', 'data', instance('fb-form-instance'), 'data')"/>
    </xforms:action>

    <!-- Re-annotate data after saving because attachments holders might have been updated -->
    <!-- TODO: don't do that, just update data? -->
    <xforms:action ev:event="fr-data-save-done">
        <xforms:dispatch targetid="fr-form-model" name="fr-annotate-data">
            <xxforms:context name="data" value="instance('fr-form-instance')"/>
        </xforms:dispatch>
    </xforms:action>

    <!-- Form is ready -->
    <xforms:action ev:event="xforms-ready">
        <!-- Open form settings if mode is "new" -->
        <xforms:var name="is-new" value="xxforms:instance('fr-parameters-instance')/mode = 'new'" as="xs:boolean"/>
        <xforms:dispatch if="$is-new" ev:event="DOMActivate" name="fb-show-dialog" targetid="fb-form-editor$dialog-form-settings">
            <xxforms:context name="mode" value="'new'"/>
        </xforms:dispatch>
    </xforms:action>

    <!-- Annotated form instance -->
    <xforms:bind ref="instance('fb-form-instance')">
        <xforms:bind ref="xhtml:head">
            <xforms:bind ref="xforms:model[@id = 'fr-form-model']">
                <!-- Form metadata (also used by Form Runner) -->
                <xforms:bind ref="xforms:instance[@id = 'fr-form-metadata']/*">
                    <xforms:bind id="application-name-bind" ref="application-name"/>
                    <xforms:bind id="form-name-bind" ref="form-name"/>
                    <xforms:bind id="title-bind" ref="title[@xml:lang = $fb-lang]"/>
                    <xforms:bind id="description-bind" ref="description[@xml:lang = $fb-lang]"/>
                    <xforms:bind id="logo-bind" ref="logo"/>
                </xforms:bind>
                <!-- Resources -->
                <xforms:bind ref="xforms:instance[@id = 'fr-form-resources']/*">
                    <!-- Handle mandatory sections titles -->
                    <!-- The constraint checks that all the titles are non-empty, not only the one currently visible -->
                    <xforms:bind ref="resource/*[name() = $body//*:section/@id/substring-before(., '-section')]/label"
                                 required="true()"
                                 constraint="not((for $t in for $n in name(..) return ../../../resource/*[name() = $n]/label return normalize-space($t) = '') = true())"/>
                </xforms:bind>
            </xforms:bind>
        </xforms:bind>
        <!-- Keep all @edit-ref attributes pointing to the right spot -->
        <xforms:bind ref=".//@edit-ref" calculate="concat('xxforms:instance(''fb-form-instance'')/root()', ../saxon:path())"/>
    </xforms:bind>

    <!-- Standard Form Runner instance -->
    <xforms:bind id="fr-form-binds" ref="instance('fr-form-instance')">
        <xforms:bind ref="xhtml:head">
            <xforms:bind ref="xforms:model[@id = 'fr-form-model']">
                <!-- Form metadata (also used by Form Runner) -->
                <xforms:bind ref="xforms:instance[@id = 'fr-form-metadata']/*">
                    <xforms:bind ref="application-name"
                                 required="true()"
                                 type="xs:NCName"/>
                    <xforms:bind ref="form-name"
                                 required="true()"
                                 type="xs:NCName"/>
                    <!-- The constraint checks that all the titles are non-empty, not only the one currently visible -->
                    <!-- TODO: somehow mark current title as "required" if title in other languages are missing -->
                    <xforms:bind ref="title[@xml:lang = $fb-lang]"
                                 required="true()"
                                 constraint="not((for $t in ../title return normalize-space($t) = '') = true())"/>
                    <xforms:bind ref="description[@xml:lang = $fb-lang]"/>
                    <xforms:bind ref="logo"
                                 type="xs:anyURI"/>
                </xforms:bind>
                <!-- Global attachments (also used by Form Runner) -->
                <xforms:bind ref="xforms:instance[@id = 'fr-form-attachments']/*">
                    <xforms:bind id="css-attachment-bind" ref="css" type="xs:anyURI"/>
                    <xforms:bind id="pdf-attachment-bind" ref="pdf" type="xs:anyURI"/>
                </xforms:bind>
            </xforms:bind>
        </xforms:bind>
    </xforms:bind>

    <!-- Metadata for Form Builder itself -->
    <xforms:instance id="fr-form-metadata" xxforms:readonly="true">
        <metadata>
            <application-name>orbeon</application-name>
            <form-name>builder</form-name>
            <title xml:lang="en">Form Builder</title>
            <description xml:lang="en">Orbeon Form Builder allows you to easily build forms right from your web browser and without programming.</description>
            <title xml:lang="fr">Form Builder</title>
            <description xml:lang="fr">Orbeon Form Builder vous permet d'éditer des formulaires directement depuis votre navigateur et sans programmation.</description>
            <title xml:lang="ru">Мастер форм</title>
            <description xml:lang="ru">Мастер форм позволяет легко создавать шаблоны форм запросов.</description>
            <author>Orbeon, Inc.</author>
            <logo mediatype="image/png" filename="orbeon-logo-trimmed-transparent-30.png" size="">/apps/fr/style/orbeon-logo-trimmed-transparent-30.png</logo>
        </metadata>
    </xforms:instance>

    <!-- Similar to fr-triggers-instance, but for FB-specific buttons -->
    <xforms:instance id="fb-triggers-instance">
        <triggers>
            <save-as/>
        </triggers>
    </xforms:instance>

    <xforms:instance id="fb-static-upload">
        <static-upload>
            <empty/>
            <non-empty>content</non-empty>
        </static-upload>
    </xforms:instance>

    <xforms:bind ref="instance('fb-triggers-instance')">
        <!-- Condition for disabling Save as… button -->
        <!-- HACK: Not sure why, but if we don't put a calculate here (which is useless), then the readonly is not evaluated on recalculate -->
        <xforms:bind ref="save-as" readonly="xxforms:instance('fr-parameters-instance')/mode != 'edit'" calculate="xxforms:instance('fr-parameters-instance')/mode"/>
    </xforms:bind>

    <!-- HACK: Bind has inter-model dependency -->
    <xforms:recalculate ev:event="xxforms-value-changed" ev:observer="fr-parameters-instance"/>

    <!-- All form resources -->
    <xforms:instance id="fr-form-resources" src="oxf:/forms/orbeon/builder/form/resources.xml"
                     xxforms:readonly="true" xxforms:cache="true"/>

    <!-- Instance containing the current language -->
    <xforms:instance id="fb-language-instance">
        <language/>
    </xforms:instance>

    <!-- Store user-agent details -->
    <xforms:instance id="fb-user-agent-instance">
        <user-agent>
            <minimal-ie-version/>
            <is-supported-browser/>
        </user-agent>
    </xforms:instance>

    <!-- Submission to test the form -->
    <!-- NOTE: Submit form to testing service with section templates XBL included -->
    <xforms:submission
            id="fb-test-form-submission"
            ref="xxforms:call-xpl('oxf:/forms/orbeon/builder/form/add-template-bindings.xpl',
                                  ('data', 'bindings'),
                                  (xxforms:instance('fr-form-instance'), xxforms:instance('fb-components-instance')),
                                  'data')"
            method="post"
            replace="all"
            resource="/fr/orbeon/builder/test"
            xxforms:target="fb-test-iframe"
            xxforms:show-progress="false">

        <!-- Make sure de-annotated form is up to date first -->
        <xforms:dispatch ev:event="xforms-submit" targetid="fr-form-model" name="fr-data-save-prepare"/>
    </xforms:submission>

    <!-- Global variables -->
    <xforms:instance id="fb-variables">
        <variables>
            <!-- Currently selected cell td id -->
            <selected-cell/>

            <new-language/>
            <new-language-trigger/>

            <!-- Toolbox -->
            <section-trigger/>
            <grid-trigger/>
            <control-trigger/>

            <!-- Number of open dialogs -->
            <dialogs-open>0</dialogs-open>
            <!--<focus>0</focus>-->
        </variables>
    </xforms:instance>

    <xforms:bind ref="instance('fb-variables')">
        <xforms:bind ref="new-language-trigger" readonly="normalize-space(../new-language) = ''"/>
    </xforms:bind>

    <xforms:var name="variables" value="instance('fb-variables')"/>
    <xforms:var name="selected-cell" value="$variables/selected-cell"/>

    <xforms:setvalue ev:event="xxforms-dialog-open" ev:observer="#document"
                     ref="instance('fb-variables')/dialogs-open" value="xs:integer(.) + 1"/>

    <xforms:setvalue ev:event="xxforms-dialog-close" ev:observer="#document"
                     ref="instance('fb-variables')/dialogs-open" value="xs:integer(.) - 1"/>

    <!--<xforms:setvalue ev:event="DOMFocusIn" ev:observer="fb-details-group"-->
                     <!--ref="instance('fb-variables')/focus" value="xs:integer(.) + 1"/>-->

    <!--<xforms:setvalue ev:event="DOMFocusOut" ev:observer="fb-details-group"-->
                     <!--ref="instance('fb-variables')/focus" value="xs:integer(.) - 1"/>-->

    <!--<xforms:message level="xxforms:log-info" ev:event="DOMFocusIn" ev:observer="fb-section-content-group"-->
                     <!--value="concat('xxx in ', xxforms:event('xxforms:effective-targetid'))"/>-->

    <!--<xforms:message level="xxforms:log-info" ev:event="DOMFocusOut" ev:observer="fb-section-content-group"-->
                     <!--value="concat('xxx out ', xxforms:event('xxforms:effective-targetid'))"/>-->

    <xforms:bind ref="instance('fb-variables')">
        <!-- Make buttons readonly depending on whether items can be inserted -->
        <xforms:bind ref="section-trigger"  readonly="$current-td/ancestor::xbl:binding or not(toolboxOps:canInsertSection($body))"/>
        <xforms:bind ref="grid-trigger"     readonly="$current-td/ancestor::xbl:binding or not(toolboxOps:canInsertGrid($body))"/>
        <xforms:bind ref="control-trigger"  readonly="$current-td/ancestor::xbl:binding or not(toolboxOps:canInsertControl($body))"/>
    </xforms:bind>

    <!-- Schema upload dialog -->
    <xforms:instance id="fb-schema-upload-instance">
        <validation>
            <schema-uri filename="" mediatype="" size=""/>
            <schema>
                <!-- Content will be like this -->
                <!--<xs:schema>-->
                    <!--...-->
                <!--</xs:schema>-->
            </schema>
            <temp-type/>
        </validation>
    </xforms:instance>

    <xforms:bind ref="instance('fb-schema-upload-instance')">
        <xforms:bind ref="temp-type" readonly="true()"/>
    </xforms:bind>

    <!-- Submission to load the components library -->
    <!-- NOTE: We only pass the app name, not the form name -->
    <xforms:submission id="fb-load-toolbox" serialization="none"
                       method="get" resource="/fr/service/custom/orbeon/builder/toolbox?application={event('app')}"
                       replace="instance" instance="fb-components-instance"
                       xxforms:readonly="true" xxforms:cache="true">>

        <!-- Annotate form when the toolbox is loaded. This is needed to ensure the XBL for section templates is updated.
             NOTE: The data in fr-form-instance must be up to date! -->
        <xforms:dispatch ev:event="xforms-submit-done" targetid="fr-form-model" name="fr-annotate-data">
            <xxforms:context name="data" value="instance('fr-form-instance')"/>
        </xforms:dispatch>

    </xforms:submission>

    <xforms:instance id="fb-components-instance">
        <!-- This contains the components available for the currently edited form -->
        <components/>
    </xforms:instance>

    <!-- Instance for metadata editor -->
    <xforms:instance id="fb-metadata-instance">
        <metadata>
            <next-trigger/>
            <mode/> <!-- edit | save-as -->
            <toolbox>
                <schema/>
                <css/>
                <pdf/>
                <edit-source/>
                <custom-xml/>
                <permissions/>
                <services-actions/>
            </toolbox>
        </metadata>
    </xforms:instance>

    <!-- Enable/disable trigger -->
    <xforms:setvalue ev:event="xxforms-invalid" ev:observer="fb-metadata-instance" ref="instance('fb-metadata-instance')/next-trigger">disabled</xforms:setvalue>
    <xforms:setvalue ev:event="xxforms-valid" ev:observer="fb-metadata-instance" ref="instance('fb-metadata-instance')/next-trigger">enabled</xforms:setvalue>

    <xforms:bind ref="instance('fb-metadata-instance')">
        <!-- Triggers -->
        <xforms:bind ref="next-trigger" readonly=". = 'disabled'"/>
        <xforms:bind ref="toolbox/schema" relevant="xxforms:property('oxf.fb.menu.schema')"/>
        <xforms:bind ref="toolbox/css" relevant="xxforms:property('oxf.fb.menu.css')"/>
        <xforms:bind ref="toolbox/pdf" relevant="xxforms:property('oxf.fb.menu.pdf')"/>
        <xforms:bind ref="toolbox/edit-source" relevant="xxforms:property('oxf.fb.menu.edit-source')"/>
        <xforms:bind ref="toolbox/custom-xml" relevant="xxforms:property('oxf.fb.menu.custom-xml')"/>
        <xforms:bind ref="toolbox/permissions" relevant="xxforms:property('oxf.fb.menu.permissions')"/>
    </xforms:bind>

    <!-- Cut/copy/paste instance -->
    <xforms:instance id="fb-xcv-instance">
        <xcv>
            <control/>
            <holder/>
            <resources/>
            <bind/>
            <cut-trigger/>
            <copy-trigger/>
            <paste-trigger/>
        </xcv>
    </xforms:instance>
    <xforms:var name="xcv" value="instance('fb-xcv-instance')"/>

    <xforms:bind ref="$xcv">
        <xforms:bind ref="cut-trigger" readonly="not(exists($current-td/*))"/>
        <xforms:bind ref="copy-trigger" readonly="not(exists($current-td/*))"/>
        <xforms:bind ref="paste-trigger" readonly="not(exists(../control/*))"/>
    </xforms:bind>

</xforms:model>
