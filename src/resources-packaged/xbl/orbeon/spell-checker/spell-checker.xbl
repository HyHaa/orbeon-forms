<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:exforms="http://www.exforms.org/exf/1-0" >

    <xbl:binding id="fr-spell-checker" element="fr|spell-checker">
        <xbl:implementation>
            <!-- Local model -->
            <xforms:model id="spell-checker-model">

                <!-- Request to spell checker -->
                <xforms:instance id="request">
                    <spellrequest textalreadyclipped="0" ignoredups="1" ignoredigits="1" ignoreallcaps="1">
                        <text>Ths is a tst</text>
                    </spellrequest>
                </xforms:instance>

                <!-- Result of spell checking -->
                <xforms:instance id="result">
                    <spellresult error="0" clipped="0" charschecked="12">
                        <c o="0" l="3" s="1">This Th's Thus Th HS</c>
                        <c o="9" l="3" s="0">test tat ST St st</c>
                    </spellresult>
                </xforms:instance>

                <xforms:instance id="internal">
                    <internal>
                        <readonly/>         <!-- Is the node bound to this spell checker readonly -->
                        <button/>           <!-- Node to which the YUI spell checker is bound so we can make it readonly -->
                        <unknown-word/>     <!-- The current word we're looking at and trying to fix -->
                        <correction/>       <!-- The current correction being considered -->
                        <context/>          <!-- Text around the word to fix (HTML) -->
                        <text/>             <!-- The text being corrected, annotated with corrections -->
                        <is-change-all/>    <!-- Temporarily set to true|false to know the button pressed -->
                    </internal>
                </xforms:instance>

                <xforms:bind ref="instance('internal')/button" readonly="../readonly = 'true'"/>

                <!--  Spell checking -->
                <xforms:submission method="post" resource="{xxforms:property('oxf.xforms.xbl.fr.spell-checker.service')}"
                        id="spell-check-submission" ref="instance('request')" replace="instance" instance="result">
                    <xforms:action ev:event="xforms-submit-done">
                        <!-- Iterate over the correction and insert <t> elements between <c> elements to represent the normal text (non-corrections) -->
                        <xforms:action xxforms:iterate="instance('result')/c">
                            <xxforms:variable name="current-c" select="."/>
                            <xxforms:variable name="position" select="position()"/>
                            <xxforms:variable name="following-c" select="$current-c/following-sibling::c[1]"/>
                            <xxforms:variable name="offset-after-current-c" select="$current-c/@o + $current-c/@l"/>
                            <!-- If this is the first <c>, consider inserting a <t> before -->
                            <xforms:action if="$position = 1">
                                <xforms:insert if="$current-c/@o > 0" nodeset="." position="before" origin="xxforms:element('t', (xxforms:attribute('o', '0'), xxforms:attribute('l', $current-c/@o)))"/>
                            </xforms:action>
                            <!-- If we are between two <c>, consider inserting a <t> in between -->
                            <xforms:action if="exists($following-c)">
                                <xforms:insert if="$following-c/@o > $offset-after-current-c" nodeset="." position="after" origin="xxforms:element('t', (xxforms:attribute('o', $offset-after-current-c), xxforms:attribute('l', $following-c/@o - $offset-after-current-c)))"/>
                            </xforms:action>
                            <!-- If this is the last <c>, consider insert a <t> after -->
                            <xforms:action if="empty($following-c)">
                                <xxforms:variable name="text-length" select="string-length(instance('request')/text)"/>
                                <xforms:insert if="$text-length > $offset-after-current-c" nodeset="." position="after" origin="xxforms:element('t', (xxforms:attribute('o', $offset-after-current-c), xxforms:attribute('l', $text-length - $offset-after-current-c)))"/>
                            </xforms:action>
                        </xforms:action>
                        <!-- Populate the original value of the words -->
                        <xforms:action xxforms:iterate="instance('result')/*">
                            <xforms:insert context="." origin="xxforms:attribute('current', substring(instance('request')/text, context()/@o + 1, context()/@l))"/>
                        </xforms:action>
                        <xxforms:show dialog="spell-checking-dialog"/>
                        <xforms:setvalue ref="instance('internal')/current-c-index">1</xforms:setvalue>
                        <xforms:dispatch name="prepare-next-correction" target="spell-checker-model"/>
                    </xforms:action>
                </xforms:submission>

                <!-- Prepare UI for the next correction -->
                <xforms:action ev:event="prepare-next-correction">
                    <xxforms:variable name="current-c" select="(instance('result')/c[empty(@handled)])[1]"/>
                    <xforms:action if="exists($current-c)">
                        <xforms:setvalue ref="instance('internal')/unknown-word" value="$current-c/@current"/>
                        <xforms:setvalue ref="instance('internal')/correction" value="tokenize($current-c, '\s')[1]"/>
                        <xforms:setvalue ref="instance('internal')/context" value="concat(
                            string-join($current-c/preceding-sibling::*/@current, ''),
                            '&lt;span id=''fr-spell-checker-unknown-word'' class=''unknown-word''&gt;',
                            ../unknown-word,
                            '&lt;/span&gt;',
                            string-join($current-c/following-sibling::*/@current, ''))"/>
                        <xxforms:script>
                            var YD = YAHOO.util.Dom;
                            // Get the word we want to make visible
                            var unknownWord = document.getElementById("fr-spell-checker-unknown-word");
                            // Get scrollable container accounting for span/nospan
                            var notInDictionaryDiv = unknownWord.parentNode;
                            if (! YD.hasClass(notInDictionaryDiv, "xforms-output")) notInDictionaryDiv = notInDictionaryDiv.parentNode;
                            // Set scrollTop on container so the word is visible
                            notInDictionaryDiv.scrollTop = Math.max(0, unknownWord.offsetTop - unknownWord.offsetHeight);
                        </xxforms:script>
                    </xforms:action>
                </xforms:action>

            </xforms:model>
        </xbl:implementation>
        <xbl:resources>
            <xbl:style src="/xbl/orbeon/spell-checker/spell-checker.css"/>
        </xbl:resources>
        <xbl:template>
            <xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
                <xforms:group xxbl:scope="inner" appearance="xxforms:internal">

                    <!-- Variable pointing to external single-node binding -->
                    <xxforms:variable name="external" as="node()?">
                        <xxforms:sequence select="." xxbl:scope="outer"/>
                    </xxforms:variable>

                    <!-- Shortcut to internal internal instance -->
                    <xxforms:variable name="internal" as="element()" select="instance('internal')"/>
                    <!-- The currently considered correction -->
                    <xxforms:variable name="current-c" select="(instance('result')/c[empty(@handled)])[1]"/>

                    <!-- Keep track of readonlyness of bound node -->
                    <xxforms:variable name="readonly" select="exforms:readonly($external)">
                        <xforms:setvalue ev:event="xforms-enabled xforms-value-changed" ref="$internal/readonly" value="$readonly"/>
                    </xxforms:variable>

                    <!-- Trigger that starts spell checking -->
                    <fr:button ref="$internal/button" class="fr-spell-checker-start" id="spell-check">
                        <xforms:label>Spell check</xforms:label>
                        <xforms:action ev:event="DOMActivate">
                            <xforms:setvalue ref="instance('request')/text" value="$external"/>
                            <xforms:send submission="spell-check-submission"/>
                        </xforms:action>
                    </fr:button>

                    <!-- Spell checking dialog -->
                    <xxforms:dialog id="spell-checking-dialog" class="fr-spell-checker-dialog" xbl:attr="close">
                        <xforms:setfocus ev:event="xxforms-dialog-open" control="ignore"/>
                        <xforms:label>Spelling</xforms:label>
                        <xxforms:variable name="has-corrections" select="exists(instance('result')/c[empty(@handled)])"/>

                        <!-- On open, set focus -->
                        <xforms:action ev:event="xxforms-dialog-open">
                            <xforms:setfocus if="$has-corrections" control="suggestion"/>
                            <xforms:setfocus if="not($has-corrections)" control="close"/>
                        </xforms:action>

                        <!-- On close, apply replacements and do cleanup -->
                        <xforms:action ev:event="xxforms-dialog-close">
                            <xforms:setvalue xxforms:iterate="$internal/*" ref="."/>
                        </xforms:action>

                        <xforms:group ref=".[$has-corrections]" class="xbl-fr-spell-checker-correcting">
                            <xhtml:table>
                                <xhtml:tr>
                                    <xhtml:td class="label">Not in dictionary:</xhtml:td>
                                    <xhtml:td>
                                        <xforms:output value="$internal/context" mediatype="text/html" id="not-in-dictionary" class="not-in-dictionary"/>
                                    </xhtml:td>
                                    <xhtml:td rowspan="4">
                                        <!-- Ignore -->
                                        <fr:button id="ignore">
                                            <xforms:label>
                                                <xhtml:img alt="" src="/apps/fr/style/images/silk/script_go.png"/>
                                                Ignore
                                            </xforms:label>
                                            <xforms:action ev:event="DOMActivate">
                                                <!-- Mark this correction as handled -->
                                                <xforms:insert context="$current-c" origin="xxforms:attribute('handled', 'true')"/>
                                                <!-- Move to the next correction -->
                                                <xforms:dispatch name="prepare-next-correction" target="spell-checker-model"/>
                                            </xforms:action>
                                        </fr:button>
                                        <!-- Ignore all -->
                                        <fr:button>
                                            <xforms:label>
                                                <xhtml:img alt="" src="/apps/fr/style/images/silk/script_go.png"/>
                                                Ignore All
                                            </xforms:label>
                                            <xforms:action ev:event="DOMActivate">
                                                <!-- Mark all the correction with the same word as handled -->
                                                <xforms:action xxforms:iterate="$current-c | $current-c/following-sibling::c[@current = $current-c/@current and empty(@handled)]">
                                                    <xforms:insert context="." origin="xxforms:attribute('handled', 'true')"/>
                                                </xforms:action>
                                                <!-- Move to the next correction -->
                                                <xforms:dispatch name="prepare-next-correction" target="spell-checker-model"/>
                                            </xforms:action>
                                        </fr:button>
                                        <xforms:group appearance="xxforms:internal">
                                            <!-- Change -->
                                            <fr:button id="change-this">
                                                <xforms:label>
                                                    <xhtml:img alt="" src="/apps/fr/style/images/silk/script_edit.png"/>
                                                    Change
                                                </xforms:label>
                                                <xforms:action ev:event="DOMActivate">
                                                    <!-- Apply replacement -->
                                                    <xforms:setvalue ref="$current-c/@current" value="$internal/correction"/>
                                                    <!-- Mark correction as handled -->
                                                    <xforms:insert context="$current-c" origin="xxforms:attribute('handled', 'true')"/>
                                                    <!-- Move to the next correction -->
                                                    <xforms:dispatch name="prepare-next-correction" target="spell-checker-model"/>
                                                </xforms:action>
                                            </fr:button>
                                            <!-- Change all -->
                                            <fr:button id="change-all">
                                                <xforms:label>
                                                    <xhtml:img alt="" src="/apps/fr/style/images/silk/script_edit.png"/>
                                                    Change All
                                                </xforms:label>
                                                <xforms:action ev:event="DOMActivate">
                                                    <!-- For the upcoming correction with the same word -->
                                                    <xforms:action xxforms:iterate="$current-c | $current-c/following-sibling::c[@current = $current-c/@current and empty(@handled)]">
                                                        <!-- Apply replacement -->
                                                        <xforms:setvalue ref="@current" value="$internal/correction"/>
                                                        <!-- Mark correction as handled -->
                                                        <xforms:insert context="." origin="xxforms:attribute('handled', 'true')"/>
                                                    </xforms:action>
                                                    <!-- Move to the next correction -->
                                                    <xforms:dispatch name="prepare-next-correction" target="spell-checker-model"/>
                                                </xforms:action>
                                            </fr:button>
                                        </xforms:group>
                                        <!-- Done -->
                                        <fr:button>
                                            <xforms:label>
                                                <xhtml:img alt="" src="/apps/fr/style/images/silk/cross.png"/>
                                                Done
                                            </xforms:label>
                                            <xforms:action ev:event="DOMActivate">
                                                <xforms:setvalue if="exists(instance('result')/*)" ref="$external" value="string-join(instance('result')/*/@current, '')"/>
                                                <xxforms:hide  dialog="spell-checking-dialog"/>
                                            </xforms:action>
                                        </fr:button>
                                    </xhtml:td>
                                </xhtml:tr>
                                <xhtml:tr>
                                    <xhtml:td class="label">
                                        <xforms:label for="correction">Change to:</xforms:label>
                                    </xhtml:td>
                                    <xhtml:td>
                                        <xforms:input ref="$internal/correction" id="correction"/>
                                    </xhtml:td>
                                </xhtml:tr>
                                <xhtml:tr>
                                    <xhtml:td class="label">
                                        <xforms:label for="suggestions">Suggestions:</xforms:label>
                                    </xhtml:td>
                                    <xhtml:td>
                                        <xforms:select1 id="suggestions" appearance="compact" ref="$internal/correction">
                                            <xforms:itemset ref="tokenize(instance('result')/c[1], '\s')">
                                                <xforms:label value="."/>
                                                <xforms:value value="."/>
                                            </xforms:itemset>
                                        </xforms:select1>
                                    </xhtml:td>
                                </xhtml:tr>
                            </xhtml:table>
                        </xforms:group>
                        <xforms:group ref=".[not($has-corrections)]" class="xbl-fr-spell-checker-close">
                            <xforms:setfocus ev:event="xforms-enabled" control="close"/>
                            Done spell checking.
                            <fr:button id="close">
                                <xforms:label>Done</xforms:label>
                                <xforms:action ev:event="DOMActivate">
                                    <xforms:setvalue if="exists(instance('result')/*)" ref="$external" value="string-join(instance('result')/*/@current, '')"/>
                                    <xxforms:hide  dialog="spell-checking-dialog"/>
                                </xforms:action>
                            </fr:button>
                        </xforms:group>
                    </xxforms:dialog>
                </xforms:group>
            </xforms:group>
        </xbl:template>
    </xbl:binding>

</xbl:xbl>